
Workflow A: Modifies Workflow B

name: Self-Improve Workflow B

on:
  schedule:
    - cron: '0 * * * *' # Every hour
  workflow_dispatch: # Allows manual trigger

jobs:
  modify_workflow_b:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Modify Workflow B
        run: |
          python self_evo.py --target .github/workflows/workflow-b.yml --mode improve

      - name: Validate Changes
        run: |
          python validate_workflow.py .github/workflows/workflow-b.yml
          # Validation script to ensure the new changes are valid

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git pull --rebase
          git add .github/workflows/workflow-b.yml
          git commit -m "Self-improved Workflow B"
          git push


---

Workflow B: Modifies Workflow A

name: Self-Improve Workflow A

on:
  schedule:
    - cron: '30 * * * *' # Offset by 30 minutes
  workflow_dispatch: # Allows manual trigger

jobs:
  modify_workflow_a:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Modify Workflow A
        run: |
          python self_evo.py --target .github/workflows/workflow-a.yml --mode improve

      - name: Validate Changes
        run: |
          python validate_workflow.py .github/workflows/workflow-a.yml

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git pull --rebase
          git add .github/workflows/workflow-a.yml
          git commit -m "Self-improved Workflow A"
          git push


---

3. Python Script: Self-Improvement Logic

self_evo.py

import argparse
import yaml
import random

def improve_workflow(file_path, mode):
    with open(file_path, 'r') as f:
        workflow = yaml.safe_load(f)

    # Example: Randomly modify the schedule to experiment with timing
    if mode == "improve":
        new_cron = f"{random.randint(0, 59)} * * * *"  # Randomize minute
        if 'on' in workflow and 'schedule' in workflow['on']:
            workflow['on']['schedule'][0]['cron'] = new_cron

    # Save the modified workflow
    with open(file_path, 'w') as f:
        yaml.dump(workflow, f)

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('--target', help='Path to the workflow file to improve')
    parser.add_argument('--mode', help='Improvement mode (e.g., "improve")')
    args = parser.parse_args()

    improve_workflow(args.target, args.mode)


---

Validation Script: Prevent Chaos

validate_workflow.py

import sys
import yaml

def validate_workflow(file_path):
    with open(file_path, 'r') as f:
        workflow = yaml.safe_load(f)

    # Example: Ensure the cron syntax is valid
    if 'on' in workflow and 'schedule' in workflow['on']:
        cron = workflow['on']['schedule'][0].get('cron', '')
        if not cron or len(cron.split()) != 5:
            raise ValueError(f"Invalid cron syntax: {cron}")

if __name__ == "__main__":
    file_path = sys.argv[1]
    try:
        validate_workflow(file_path)
        print("Validation passed.")
    except Exception as e:
        print(f"Validation failed: {e}")
        sys.exit(1)
